version: "3.5"

services:

  postgresql:
    container_name: ds-db
    restart: always
    build:
      context: .
      dockerfile: ${PWD}/dockerfiles/PostgreSQLDockerfile
    env_file:
      - .env
    environment:
      PGDATA: /var/lib/postgresql/data
      APP_USER: ${APP_DB_USER}
      APP_DB_PASSWORD: ${APP_DB_PASSWORD}
      APP_DATABASE: ${APP_DATABASE}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "${APP_DATABASE}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 7s
    ports:
      - "5432:5432"
    volumes:
      - /var/lib/postgresql/data
    networks:
      - ds-net

  redis:
    container_name: ds-redis
    image: redis:7.2.4-bookworm
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 4s
    ports:
      - "6379:6379"
    networks:
      - ds-net

  app:
    container_name: ds-app
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    links:
      - postgresql
      - redis
    build:
      dockerfile: ${PWD}/dockerfiles/AppDockerfile
      context: ${PWD}/src
    env_file:
      - .env
    environment:
      APP_USER: ${APP_DB_USER}
      APP_DB_PASSWORD: ${APP_DB_PASSWORD}
      APP_DATABASE: ${APP_DATABASE}
    ports:
      - "80:80"
    volumes:
      - ${PWD}/src:/deploy
    networks:
      - ds-net

networks:
  ds-net:
    driver: bridge
